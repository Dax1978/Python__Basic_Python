###################################################################################################################################
# Задание 4                                                                                                                       #
# Написать декоратор с аргументом-функцией (callback), позволяющий валидировать входные значения функции и выбрасывать            #
# исключение ValueError, если что-то не так                                                                                       #
###################################################################################################################################

def val_checker(isCorrect):
    def the_real_decorator(func):
        def wrapper(*args, **kwargs):
            if isCorrect(args[0]):
                val = func(*args, **kwargs)
                print('Результат: ' + str(val))
                return val
            else:
                raise ValueError
        return wrapper
    return the_real_decorator


@val_checker(lambda x: x > 0)
def calc_cube(x):
    return x ** 3


print()
print('Тест декоратора с аргументом-функцией при положительном значении аргумента:')
calc_cube(5)
# print('\nТест декоратора с аргументом-функцией при 0 значении аргумента:')
# calc_cube(0)
print('\nТест декоратора с аргументом-функцией при отрицательном значении аргумента:')
calc_cube(-5)
