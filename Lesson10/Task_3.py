####################################################################################################################
# Задание 3                                                                                                        #
# Осуществить программу работы с органическими клетками, состоящими из ячеек. Необходимо создать класс «Клетка».   #
# В его конструкторе инициализировать параметр, соответствующий количеству ячеек клетки (целое число). В классе    #
# должны быть реализованы методы перегрузки арифметических операторов: сложение (__add__()), вычитание (__sub__()),#
# умножение (__mul__()), деление (__floordiv____truediv__()). Эти методы должны применяться только к клеткам и     #
# выполнять увеличение, уменьшение, умножение и округление до целого числа деления клеток соответственно.          #
# Сложение. Объединение двух клеток. При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух  #
# клеток.                                                                                                          #
# Вычитание. Участвуют две клетки. Операцию необходимо выполнять, только если разность количества ячеек двух       #
# клеток больше нуля, иначе выводить соответствующее сообщение.                                                    #
# Умножение. Создаётся общая клетка из двух. Число ячеек общей клетки — произведение количества ячеек этих двух    #
# клеток.                                                                                                          #
# Деление. Создаётся общая клетка из двух. Число ячеек общей клетки определяется как целочисленное деление         #
# количества ячеек этих двух клеток.                                                                               #
# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.      #
# Этот метод позволяет организовать ячейки по рядам.                                                               #
# Метод должен возвращать строку вида *****\n*****\n*****..., где количество ячеек между \n равно переданному      #
# аргументу. Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.           #
#                                                                                                                  #
# Например, количество ячеек клетки равняется 12, а количество ячеек в ряду — 5. В этом случае метод make_order()  #
# вернёт строку: *****\n*****\n**.                                                                                 #
# Или количество ячеек клетки — 15, а количество ячеек в ряду равняется 5.                                         #
# Тогда метод make_order() вернёт строку: *****\n*****\n*****.                                                     #
####################################################################################################################

class Cell():
    def __init__(self, count) -> None:
        self.count = count

    def make_order(self, n):
        if n > self.count:
            n = self.count
        j = 1
        cell_str = ''
        for i in range(self.count):
            cell_str += '*'
            if j == n:
                cell_str += '\\n'
                j = 0
            j += 1
        if cell_str[-2:] == '\\n':
            cell_str = cell_str[:-2]
        return cell_str

    def __add__(self, other):
        return Cell(self.count + other.count)

    def __sub__(self, other):
        if self.count > other.count:
            return Cell(self.count - other.count)
        print("Данное вычитание не возможно!")

    def __mul__(self, other):
        return Cell(self.count * other.count)

    def __floordiv__(self, other):
        if self.count > other.count:
            return Cell(int(self.count // other.count))
        print("Данное целочисленное деление не возможно!")

    # По условию, деление клеток - целочисленное
    def __truediv__(self, other):
        if self.count > other.count:
            return Cell(int(self.count // other.count))
        print("Данное целочисленное деление не возможно!")


cell_1 = Cell(7)
print("вывод клетки cell_1, длиной 7, с шагом 3:")
print(cell_1.make_order(3))

cell_2 = Cell(15)
print("вывод клетки cell_2, длиной 15, с шагом 5:")
print(cell_2.make_order(5))

print("вывод клетки cell_3, полученной суммой клеток cell_1 и cell_2:")
cell_3 = cell_1 + cell_2
print(cell_3.make_order(5))

print("вывод клетки cell_4, полученной разностью клеток cell_1 и cell_2:")
cell_4 = cell_1 - cell_2
print("вывод клетки cell_4, полученной разностью клеток cell_2 и cell_1:")
cell_4 = cell_2 - cell_1
print(cell_4.make_order(3))

print("вывод клетки cell_5, полученной умножением клеток cell_1 и cell_2:")
cell_5 = cell_1 * cell_2
print(cell_5.make_order(5))

print("вывод клетки cell_6, полученной целочисленным делением клеток cell_1 и cell_2:")
cell_6 = cell_1 // cell_2
print("вывод клетки cell_6, полученной целочисленным делением клеток cell_2 и cell_1:")
cell_6 = cell_2 // cell_1
print(cell_6.make_order(3))

print("вывод клетки cell_7, полученной делением клеток cell_1 и cell_2:")
cell_7 = cell_1 / cell_2
print("вывод клетки cell_7, полученной делением клеток cell_2 и cell_1:")
cell_7 = cell_2 / cell_1
print(cell_7.make_order(3))
